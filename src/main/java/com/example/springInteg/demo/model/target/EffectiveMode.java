package com.example.springInteg.demo.model.target;/*
 * FastDiscount
 * Add, delete and modify fast discount for subscriber or a group
 *
 * OpenAPI spec version: V1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;
import org.springframework.validation.annotation.Validated;

import java.util.Objects;

/**
 * Effective mode
 */
@Validated
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2022-03-19T08:51:48.657Z")
public class EffectiveMode {
  @JsonProperty("mode")
  private String mode = null;

  @JsonProperty("effectiveDate")
  private String effectiveDate = null;

  public EffectiveMode mode(String mode) {
    this.mode = mode;
    return this;
  }

   /**
   * Mode
   * @return mode
  **/
  @ApiModelProperty(value = "Mode")
  public String getMode() {
    return mode;
  }

  public void setMode(String mode) {
    this.mode = mode;
  }

  public EffectiveMode effectiveDate(String effectiveDate) {
    this.effectiveDate = effectiveDate;
    return this;
  }

   /**
   * Effective Time
   * @return effectiveDate
  **/
  @ApiModelProperty(required = true, value = "Effective Time")
  public String getEffectiveDate() {
    return effectiveDate;
  }

  public void setEffectiveDate(String effectiveDate) {
    this.effectiveDate = effectiveDate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EffectiveMode effectiveMode = (EffectiveMode) o;
    return Objects.equals(this.mode, effectiveMode.mode) &&
        Objects.equals(this.effectiveDate, effectiveMode.effectiveDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mode, effectiveDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EffectiveMode {\n");
    
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    effectiveDate: ").append(toIndentedString(effectiveDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

