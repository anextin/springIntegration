package com.example.springInteg.demo.model.target;/*
 * FastDiscount
 * Add, delete and modify fast discount for subscriber or a group
 *
 * OpenAPI spec version: V1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */




import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;
import org.springframework.validation.annotation.Validated;

import java.util.Objects;

/**
 * Subscriber access code
 */
@Validated
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2022-03-19T08:51:48.657Z")
public class SubscriberAccessCode {
  @JsonProperty("subscriberIdentity")
  private String subscriberIdentity = null;

  @JsonProperty("identityType")
  private String identityType = null;

  @JsonProperty("subscriberId")
  private String subscriberId = null;

  public SubscriberAccessCode subscriberIdentity(String subscriberIdentity) {
    this.subscriberIdentity = subscriberIdentity;
    return this;
  }

   /**
   * Subscriber identitier
   * @return subscriberIdentity
  **/
  @ApiModelProperty(value = "Subscriber identitier")
  public String getSubscriberIdentity() {
    return subscriberIdentity;
  }

  public void setSubscriberIdentity(String subscriberIdentity) {
    this.subscriberIdentity = subscriberIdentity;
  }

  public SubscriberAccessCode identityType(String identityType) {
    this.identityType = identityType;
    return this;
  }

   /**
   * MSISDN type. 1: MSISDN 2: IMSI 3: SIP_URI 4: NAI 5: Voip SIM 9: data MSISDN 10: associated MSISDN 20: fixed-line telephone number 30: account (URI format) 40: IPTV login account (URI format) 41: Cable TV (URI format) 50: VoIP 51: VoIP login account (URI format) 60: ICCID
   * @return identityType
  **/
  @ApiModelProperty(value = "MSISDN type. 1: MSISDN 2: IMSI 3: SIP_URI 4: NAI 5: Voip SIM 9: data MSISDN 10: associated MSISDN 20: fixed-line telephone number 30: account (URI format) 40: IPTV login account (URI format) 41: Cable TV (URI format) 50: VoIP 51: VoIP login account (URI format) 60: ICCID")
  public String getIdentityType() {
    return identityType;
  }

  public void setIdentityType(String identityType) {
    this.identityType = identityType;
  }

  public SubscriberAccessCode subscriberId(String subscriberId) {
    this.subscriberId = subscriberId;
    return this;
  }

   /**
   * Third-party subscriber key.
   * @return subscriberId
  **/
  @ApiModelProperty(value = "Third-party subscriber key.")
  public String getSubscriberId() {
    return subscriberId;
  }

  public void setSubscriberId(String subscriberId) {
    this.subscriberId = subscriberId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubscriberAccessCode subscriberAccessCode = (SubscriberAccessCode) o;
    return Objects.equals(this.subscriberIdentity, subscriberAccessCode.subscriberIdentity) &&
        Objects.equals(this.identityType, subscriberAccessCode.identityType) &&
        Objects.equals(this.subscriberId, subscriberAccessCode.subscriberId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subscriberIdentity, identityType, subscriberId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubscriberAccessCode {\n");
    
    sb.append("    subscriberIdentity: ").append(toIndentedString(subscriberIdentity)).append("\n");
    sb.append("    identityType: ").append(toIndentedString(identityType)).append("\n");
    sb.append("    subscriberId: ").append(toIndentedString(subscriberId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

